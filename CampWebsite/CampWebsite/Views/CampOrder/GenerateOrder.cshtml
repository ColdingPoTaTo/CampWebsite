@model IEnumerable<CampWebsite.ViewModels.PreOrderInfoViewModel>


@{
    ViewBag.Title = "訂單確認";
}


@{
    var checkinStart = Model.First().fCheckinStart;
    var checkinEnd = Model.Last().fCheckinEnd;
    var stayNight = checkinEnd.Subtract(checkinStart).Days;
}
@{
    var totalPrice = 0;
    foreach (var i in Model)
    {
        totalPrice += i.fOrderPrice;
    }
}

<div class="container d-flex justify-content-center my-5">
    <div class="col-12 col-lg-6 border shadow">
        <div class="justify-content-center px-5 pt-3">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <h2 class="text-center ">訂單確認</h2>
                <div class="row mt-3">
                    <div class="col-6">
                        <h4 class="text-center">住宿資訊</h4>
                        <hr />
                        <div class="mb-3">入住日期: @Model.First().fCheckinStart.ToShortDateString().ToString()</div>
                        <div class="mb-3">退宿日期: @Model.Last().fCheckinEnd.ToShortDateString().ToString()</div>
                        <div class="mb-3">入住 @stayNight 晚 - NT$ @totalPrice 元 </div>
                    </div>
                    <div class="col-6">
                        <h4 class="text-center">旅客資料</h4>
                        <hr />
                        <div class="col-sm-12 mb-2">
                            <div class="d-flex form-group">
                                <div class="flex-column text-center me-2">姓名</div>
                                <input class="rounded m-auto" type="text" placeholder="姓名" name="fClientName" value="@Model.First().tMember.fName" required />
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="d-flex form-group">
                                <div class="flex-column text-center me-2">信箱</div>
                                <input class="rounded m-auto" type="text" placeholder="信箱" name="fClientEmail" value="@Model.First().tMember.fEmail" required />
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="d-flex form-group">
                                <div class="flex-column text-center me-2">電話</div>
                                <input class="rounded m-auto" type="text" placeholder="電話" name="fClientPhone" value="@Model.First().tMember.fPhoneNumber" required />
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="form-horizontal">
                    @{
                        int index = 0;
                    }
                    @foreach (var item in Model)
                    {
                        <div class="form-group" @(item.fCheckinStart == checkinStart ? "" : "style = display:none")>
                            <div class="card mt-3">
                                <div class="card-header d-flex justify-content-between">
                                    <div>
                                        帳棚名稱: @item.tTent.fTentName
                                    </div>
                                </div>
                                <div class="card-body">
                                    <blockquote class="blockquote mb-0 ">
                                        <div class="d-flex justify-content-between">
                                            <div class="">
                                                <p>帳棚類型: @item.tTent.fTentCategory</p>
                                                <p>適合人數: @item.tTent.fTentPeople</p>
                                            </div>
                                            <div class="">
                                                <div>備註</div>
                                                <div class="col-md-10">
                                                    <textarea name="newOrderList[@index].fOrderComment" value="@item.fOrderComment"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </blockquote>
                                    <input type="hidden" name="newOrderList[@index].tTent.fTentID" value="@item.tTent.fTentID" />
                                    <input type="hidden" name="newOrderList[@index].fCheckinStart" value="@item.fCheckinStart" />
                                    <input type="hidden" name="newOrderList[@index].fOrderPrice" value="@item.fOrderPrice" />
                                </div>
                            </div>
                        </div>
                        index++;
                    }
                    <div class="form-group">
                        <div class="d-flex justify-content-center my-3">
                            <input type="submit" value="Save" class="btn border-success" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

@section scriptBody{
    <script>
        $(function () {
            $("Form").submit(function (e) {
                /*            console.log("進入");*/
                var currentTarget = e.target;
                /*            console.log(currentTarget);*/
                Swal.fire({
                    title: '確認付款嗎',
                    text: "請核對訂單內容後再付款",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '馬上付款!',
                    cancelButtonText: '再考慮一下'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire(
                            '付款成功!',
                            '祝您有個美好的旅程',
                            'success'
                        ).then(function () {
                            currentTarget.submit()
                        })
                    }
                })
                return false;
            });

        });
    </script>
}

