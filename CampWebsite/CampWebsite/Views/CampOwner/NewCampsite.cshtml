@model CampWebsite.ViewModels.NewCampsiteViewModel

@{ ViewBag.Title = "註冊新營區";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<style>
    .required::after {
        content: " *";
        color: red;
    }
    .input-validation-error {
        border: 2px solid red;
    }
    .error-type::before {
        content: "注意!! ";
        color: red;
    }
    .error-type {
        color: red;
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<div class="container">
    <div class="page-header mb-3">
        <h3>新增你的營區</h3>
        <br />
        <span>資料完整客人才找的到你唷</span>
    </div>
    <br />

    @using (Html.BeginForm("NewCampsite", "CampOwner", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
            @Html.AntiForgeryToken()

        <div class="col-md-10 col-lg-8">
            
            @*名稱*@
            <div class="form-group mb-5">
                @Html.LabelFor(model => model.tCampsite.fCampsiteName, new { @class = "control-label card-title required" })
                <span class="form-text">最多12個字唷</span>
                @Html.EditorFor(model => model.tCampsite.fCampsiteName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteName, "", new { @class = "text-danger" })
            </div>


            @*Introduction*@
            <div class="form-group mb-5">
                @Html.LabelFor(model => model.tCampsite.fCampsiteIntroduction, new { @class = "control-label card-title required" })
                <br />
                @Html.TextAreaFor(model => model.tCampsite.fCampsiteIntroduction, new { @class = "form-control w-100" })
                @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteIntroduction, "", new { @class = "text-danger" })
            </div>


            @*區域縣市*@
            <div class="mb-5 form-group">
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.tCampsite.fCampsiteArea, new { @class = "control-label card-title required" })
                        @Html.DropDownListFor(model => model.tCampsite.fCampsiteArea, (IEnumerable<SelectListItem>)Model.SelectArea, "請選擇區域", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteArea, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.tCampsite.fCampsiteCity, new { @class = "control-label  card-title required" })
                        <select htmlattributes="{ class = form-select }" id="tCampsite_fCampsiteCity" name="tCampsite.fCampsiteCity" class="form-select" onchange="appendAddress(event)">
                            <option value="">請選擇縣市</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*地址*@
            <div class="form-group mb-5">
                @Html.LabelFor(model => model.tCampsite.fCampsiteAddress, new { @class = "control-label  card-title required" })
                <input class="form-control text-box single-line" data-val="true" data-val-required="必填欄位" id="tCampsite_fCampsiteAddress" name="tCampsite.fCampsiteAddress" type="text" value="">
                @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteAddress, "", new { @class = "text-danger" })
            </div>

            @*phone*@
            <div class="form-group mb-5">
                @Html.LabelFor(model => model.tCampsite.fCampsitePhone, new { @class = "control-label card-title required" })
                @Html.EditorFor(model => model.tCampsite.fCampsitePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tCampsite.fCampsitePhone, "", new { @class = "text-danger" })
            </div>


            @*altitude*@
            <div class="form-group mb-5">
                <label class="control-label card-title" for="tCampsite_fCampsiteAltitude">海拔高度(公尺)：</label><span id="altitudeDisplay"></span>
                <br />
                <span class="form-text">預設為0</span>
                <div class="d-flex justify-content-center">
                    <div>0</div>
                    <div class="w-100 px-3">
                        <input type="range" id="tCampsite_fCampsiteAltitude" name="fCampsiteAltitude" min="0" max="2500" step="100" class="form-range" value="0">
                    </div>
                    <div>2500</div>
                </div>
                <div class="form-check form-check-inline">
                    @Html.CheckBoxFor(model => model.withoutAltitude, new { @class = "form-check-input" })
                    <label class="form-check-label" for="withAltitude">拒絕提供高度</label>
                </div>
            </div>

            @*公休日*@
            <div class="form-group mb-5">
                @Html.LabelFor(model => model.tCampsite.fCampsiteClosedDay, new { @class = "control-label card-title" })
                <span id="dayOffDisplay"> </span>
                <br />
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Monday" value="1">
                    <label class="form-check-label" for="Monday">星期一</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Tuesday" value="2">
                    <label class="form-check-label" for="Tuesday">星期二</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Wednesday" value="3">
                    <label class="form-check-label" for="Wednesday">星期三</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Thursday" value="4">
                    <label class="form-check-label" for="Thursday">星期四</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Friday" value="5">
                    <label class="form-check-label" for="Friday">星期五</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Saturday" value="6">
                    <label class="form-check-label" for="Saturday">星期六</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="Sunday" value="7">
                    <label class="form-check-label" for="Sunday">星期天</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input dayOff" type="checkbox" id="closedDayNone" value="0">
                    <label class="form-check-label" for="closedDayOne">無</label>
                </div>
                @Html.HiddenFor(model => model.tCampsite.fCampsiteClosedDay, new { value = "0" })
                @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteClosedDay, "", new { @class = "text-danger" })
            </div>


            @*check in time check out time*@
            <div class="mb-5 form-group">
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.tCampsite.fCampsiteCheckInTime, new { @class = "control-label card-title" })
                        <span id="checkinDisplay"></span>
                        <input class="form-control text-box single-line" id="visibleCheckIn" type="time" step="">
                        @Html.HiddenFor(model => model.tCampsite.fCampsiteCheckInTime)
                        @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteCheckInTime, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.tCampsite.fCampsiteCheckOutTime, new { @class = "control-label card-title" })
                        <span id="checkoutDisplay"></span>
                        <input class="form-control text-box single-line" id="visibleCheckOut" type="time" step="">
                        @Html.HiddenFor(model => model.tCampsite.fCampsiteCheckOutTime)
                        @Html.ValidationMessageFor(model => model.tCampsite.fCampsiteCheckOutTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            @* cover photo *@
            <div class="form-group mb-5">
                <label class="col-form-label w-100 required">封面照片</label>
                <img src="" alt="" id="coverPhotoPreview" height="200" />
                <input data-val="true" id="coverPhotoInput" name="CoverPhoto" type="file" accept="image/*" onchange="loadCover(event)" class="form-control">
                <span class="form-text" id="coverPhotoMessage">只接受圖檔：jpg   jpeg  png  gif</span>
            </div>

            <div class="form-group">
                    <button type="submit" class="btn btn-success" id="btnSend">新增營區</button>
            </div>
        </div>

    }
</div>

    <script>
        //coverPhoto
        const coverInput = document.getElementById("coverPhotoInput");
        const coverPreview = document.getElementById("coverPhotoPreview");
        const coverMessage = document.getElementById("coverPhotoMessage");
        const send = document.getElementById("btnSend");

        function loadCover(e) {
            if (coverInput.files.length == 0) {
                return;
            } else if (!coverInput.files[0].type.startsWith("image/")) {
                send.disabled = true;
                coverPreview.src = "";
                coverMessage.classList.add("error-type");
                return;
            } else {
                coverMessage.classList.remove("error-type");
                send.disabled = false;
                coverPreview.src = URL.createObjectURL(e.target.files[0]);
                coverPreview.onLoad = function () {
                    URL.revokeObjectURL(coverPreview.src);
                }
            }
        }
    </script>
    @*<script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
    <script>
        const appendAddress = function (e) {
            e.preventDefault();
            document.getElementById("tCampsite_fCampsiteAddress").value = $("#tCampsite_fCampsiteCity option:selected").val();
            console.log("success");
        }


    $(  function () {
        //area & city
        $("#tCampsite_fCampsiteArea").change(function () {
            ChangeCities()
        });

        //dat off
        $(""
        $("#tCampsite_fCampsiteClosedDay").value = "0";
        $("#Monday").change(function () {
            if (this.checked) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value += "1";
                $("#dayOffDisplay").append("星期一");
            }
            if (document.getElementById("tCampsite_fCampsiteClosedDay").value.startsWith("0")) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value.slice(1);
            }
            document.getElementById("tCampsite_fCampsiteClosedDay").value = [...new Set(uni.split(""))].sort().join("");
        })
          
        $("#Mnday").change(function () {
            if (this.checked) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value += "1";
                $("#dayOffDisplay").append("星期一");
            }
            if (document.getElementById("tCampsite_fCampsiteClosedDay").value.startsWith("0")) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value.slice(1);
            }
            document.getElementById("tCampsite_fCampsiteClosedDay").value = [...new Set(uni.split(""))].sort().join("");
        })

        $("#Monday").change(function () {
            if (this.checked) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value += "1";
                $("#dayOffDisplay").append("星期一");
            }
            if (document.getElementById("tCampsite_fCampsiteClosedDay").value.startsWith("0")) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value.slice(1);
            }
            document.getElementById("tCampsite_fCampsiteClosedDay").value = [...new Set(uni.split(""))].sort().join("");
            console.log("origin: " + document.getElementById("tCampsite_fCampsiteClosedDay").value)
        })

        $("#Monday").change(function () {
            if (this.checked) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value += "1";
                $("#dayOffDisplay").append("星期一");
            }
            if (document.getElementById("tCampsite_fCampsiteClosedDay").value.startsWith("0")) {
                document.getElementById("tCampsite_fCampsiteClosedDay").value.slice(1);
            }
            document.getElementById("tCampsite_fCampsiteClosedDay").value = [...new Set(uni.split(""))].sort().join("");
            console.log("origin: " + document.getElementById("tCampsite_fCampsiteClosedDay").value)
        })



    });


    const  ChangeCities = function() {
        let selectedArea = $("#tCampsite_fCampsiteArea option:selected").val();
        if (    $.trim(selectedArea).length > 0     ) {
            GetCities(selectedArea);
        }
    }
    function GetCities(selectedArea) {
        $.ajax({
            url: '@Url.Action("GetCities", "CampOwner")',
            data: { area: selectedArea },
            type: "post",
            cache: false,
            async: false,
            dataType: "json",
            success: function (data) {
                $("#tCampsite_fCampsiteCity").empty();
                if (data.length > 0) {
                    $("#tCampsite_fCampsiteCity").append($("<option></option>").val("").text("請選擇縣市"));
                    $.each(data, function (i, item) {
                        $("#tCampsite_fCampsiteCity").append($("<option></option>").val(item.Key).text(item.Value));
                    });
                }
            }
        });
    }
    //refactory

    //altitude
    const slider = document.getElementById("tCampsite_fCampsiteAltitude");
    const display = document.getElementById("altitudeDisplay");
    display.innerHTML = slider.value;
    slider.oninput = function () {
        display.innerHTML = this.value;
    }
    const noAltitude = document.getElementById("withoutAltitude");
    noAltitude.onchange = function () {
        if (this.checked) {
            slider.disabled = true;
            display.innerHTML = "不提供";
        } else {
            slider.disabled = false;
            slider.innerHTML = 0;
        }
        }
        //dayoff

    const checkIn = document.getElementById("visibleCheckIn");
    const checkOut = document.getElementById("visibleCheckOut");
    checkIn.onchange = function () {
    document.getElementById("tCampsite_fCampsiteCheckinTime").value = this.value.replace(":","")
    }
    checkOut.onchange = function () {
    document.getElementById("tCampsite_fCampsiteCheckOutTime").value = this.value.replace(":","")
    }
    </script>
